#ifndef _SLS_Elem_
   #define _SLS_Elem_

////////////////////////////////////////////////////////////////////////////
//
// Definition module: SLSE Simple list element interface
//
// Generated file:    SLS_Elem.hpp
//
// Module identification letters: SLSE
// Module identification number:  0315
//
// Repository name:      Test framework support modules
// Repository file name: Z:\TALISMAN\TEST\BSW\U2.BSW
//
// Owning organization:    LES/DI/PUC-Rio
// Project:                Talisman
// List of authors
//    Id      Name
//    avs Arndt von Staa
//
// Software base change control
//       Version  Date         Authors      Description 
//       1     09/02/2007   avs          development begun
// -------------------------------------------------------------------------
// Specification
//    Implements the list element interface
//
////////////////////////////////////////////////////////////////////////////
// 
// -------------------------------------------------------------------------
// Public methods of class SLSE_ListElementValue
// 
//    SLSE_ListElementValue( )
// 
// virtual ~SLSE_ListElementValue( )
// 
// virtual bool VerifyElement(  const TAL_tpVerifyMode ModeParm )
// 
// 
////////////////////////////////////////////////////////////////////////////

//==========================================================================
//----- Required includes -----
//==========================================================================

   #include    "Talisman_Constants.inc"


//==========================================================================
//----- Class declaration -----
//==========================================================================


////////////////////////////////////////////////////////////////////////////
// 
//  Class: SLSE List element value
// 
// Description
//    All list elements must specialize this interface
// 
////////////////////////////////////////////////////////////////////////////

class SLSE_ListElementValue
{

////////////////////////////////////////////////////////////////////////////
// 
//  Method: SLSE !Construct list element value
// 
////////////////////////////////////////////////////////////////////////////

   public:
      SLSE_ListElementValue( )  ;

////////////////////////////////////////////////////////////////////////////
// 
//  Virtual Method: SLSE !Destruct list element value
// 
////////////////////////////////////////////////////////////////////////////

   public:
      virtual ~SLSE_ListElementValue( )  ;

////////////////////////////////////////////////////////////////////////////
// 
//  Virtual Method: SLSE !Verify list element value
// 
// Description
//    Verify the structure of the list element.
//    It will be called once for each element whenever a list is
//    being validated.
//    No error message will be generated by the list verifier when
//    receiving false from the element value verifier
//    
//    In this class the method does nothing. It should be redefined in
//    inheritor classes.
// 
// Parameters
//    ModeParm - establishes how the verification will be performed
//               TAL_VerifyLog - continuous mode - in which case
//                  errors should be reported to the error log and
//                  verification should attempt to examine all errors
//               TAL_VerifyNoLog - immediate mode - verification stops
//                  at the first error and no log is generated.
// 
// Return value
//    true  - if the structure is OK
//    false - if not
// 
////////////////////////////////////////////////////////////////////////////

   public:
      virtual bool VerifyElement(  const TAL_tpVerifyMode ModeParm )  ;

////////////////////////////////////////////////////////////////////////////

} ; // End of class declaration: SLSE List element value

#undef _SLS_Elem_CLASS

#endif 

////// End of definition module: SLSE Simple list element interface ////

