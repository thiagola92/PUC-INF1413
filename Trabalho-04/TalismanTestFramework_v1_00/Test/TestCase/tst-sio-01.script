// Script:    Tst-sls-01.script
// Author:    Arndt von Staa
// Date:      09/abr/2007
// Purpose:   Test sequencial IO control


== Declare parameters to be used
=DeclareParameter  sioNULL    int   1
=DeclareParameter  sioUse     int   2
=DeclareParameter  sioWrite   int   3
=DeclareParameter  false      bool .f
=DeclareParameter  true       bool .t
=DeclareParameter  read       int   1
=DeclareParameter  write      int   2
=DeclareParameter  append     int   4
=DeclareParameter  OK         int   0
=DeclareParameter  ErrorOpen  int   2

== Reset all spaces
=Reset

== Preserve the number of allocated spaces
=AllocSaveNum    1

== Test c  reate an empty control
=NewSIO           sioNULL

== Test illegal access to pointer in empty control
=GetBufferPointer sioNULL true

== Try to reuse the index
=NewSIO           sioNULL
=Recover

== Verify empty control
=VerifySIO        sioNULL true

== Destroy empty control
=DestroySIO       sioNULL

== Test open a file
=NewSIO           sioUse
=OpenFile         sioUse  "..\\testcase\\tst-sio-01"  "test"  "???" read  OK

== Test get the file name
=GetFileName      sioUse  "..\\testcase\\tst-sio-01.test"  

== Verify read file
=VerifySIO        sioUse true

== Test read the file
=ReadLine         sioUse true true "a"
=ReadLine         sioUse true true "ab"
=ReadLine         sioUse true true "abcd"
=ReadLine         sioUse true true "x"

== Destroy control
=DestroySIO       sioUse

== Open inexistent file
=NewSIO           sioUse
=OpenFile         sioUse  "..\\testcase\\tst-sio-xx"  "test"  "inexistent" read  ErrorOpen

== Verify if inexistent file exists
=ExistsFile       "..\\testcase\\tst-sio-xx"    "test"  .false
=ExistsFile       "..\\testcase\\tst-sio"       "."     .false

== Verify if existing file exists
=ExistsFile       "..\\testcase\\tst-sio-01"       "test"  .true
=ExistsFile       "..\\testcase\\tst-sio-01.test"  "."     .true

== Open existing file
=OpenFile         sioUse  "..\\testcase\\tst-sio-01"  "test"  "existing" read  OK

== Verify read file
=VerifySIO        sioUse true

== Read the file testing line count, line size, GetBufferPointer and untrimmed read
=GetBufferPointer sioUse  .false
=GetLineCount     sioUse  0

== Read line  "a"
=ReadLine         sioUse  false false  "a\x0A"
=GetLineSize      sioUse  2
=GetLineCount     sioUse  1

== Read line  "ab"
=ReadLine         sioUse  false false  "ab\x0A"
=GetLineSize      sioUse  3
=GetLineCount     sioUse  2

== Read line  "abcd"
=ReadLine         sioUse  false true  "abcd"
=GetLineSize      sioUse  4
=GetLineCount     sioUse  3

== Read line  "x"
=ReadLine         sioUse  false true  "x"
=GetLineSize      sioUse  1
=GetLineCount     sioUse  4

== Read line  "abcd"
=ReadLine         sioUse  true true  "4 strings of 4 blanks"
=GetLineCount     sioUse  5

== Read line  "    "
=ReadLine         sioUse  false false  "    \x0A"
=GetLineSize      sioUse  5
=GetLineCount     sioUse  6

== Read line  "    "
=ReadLine         sioUse  false true  ""
=GetLineSize      sioUse  0
=GetLineCount     sioUse  7

== Read line  "    "
=ReadLine         sioUse  true true  ""
=GetLineSize      sioUse  0
=GetLineCount     sioUse  8

== Read line  "    "
=ReadLine         sioUse  true  false  ""
=GetLineSize      sioUse  0
=GetLineCount     sioUse  9

== Read line "   three blanks before"
=ReadLine         sioUse  false  false  "   three blanks before\x0A"
=GetLineSize      sioUse  23
=GetLineCount     sioUse  10

== Read line "   three blanks before"
=ReadLine         sioUse  true  false  "three blanks before\x0A"
=GetLineSize      sioUse  20
=GetLineCount     sioUse  11

== Read line "   three blanks before"
=ReadLine         sioUse  false  true  "   three blanks before"
=GetLineSize      sioUse  22
=GetLineCount     sioUse  12

== Read line "   three blanks before"
=ReadLine         sioUse  true true  "three blanks before"
=GetLineSize      sioUse  19
=GetLineCount     sioUse  13

== Read line "three blanks after   "
=ReadLine         sioUse  false  false  "three blanks after   \x0A"
=GetLineSize      sioUse  22
=GetLineCount     sioUse  14

== Read line "three blanks after   "
=ReadLine         sioUse  true  false  "three blanks after   \x0A"
=GetLineSize      sioUse  22
=GetLineCount     sioUse  15

== Read line "three blanks after   "
=ReadLine         sioUse  false  true  "three blanks after"
=GetLineSize      sioUse  18
=GetLineCount     sioUse  16

== Read line "three blanks after   "
=ReadLine         sioUse  true   true  "three blanks after"
=GetLineSize      sioUse  18
=GetLineCount     sioUse  17
         
== Read line "   three before and after   "
=ReadLine         sioUse  false  false  "   three before and after   \x0A"
=GetLineSize      sioUse  29
=GetLineCount     sioUse  18

== Read line "   three before and after   "
=ReadLine         sioUse  true  false  "three before and after   \x0A"
=GetLineSize      sioUse  26
=GetLineCount     sioUse  19

== Read line "   three before and after   "
=ReadLine         sioUse  false  true  "   three before and after"
=GetLineSize      sioUse  25
=GetLineCount     sioUse  20

== Read line "   three before and after   "
=ReadLine         sioUse  true  true  "three before and after"
=GetLineSize      sioUse  22
=GetLineCount     sioUse  21

== Read line "x"
=ReadLine         sioUse  false  false  "x\x0A"
=GetLineSize      sioUse  2
=GetLineCount     sioUse  22

== Read line "x"
=ReadLine         sioUse  true   false  "x\x0A"
=GetLineSize      sioUse  2
=GetLineCount     sioUse  23

== Read line "x"
=ReadLine         sioUse  false  true  "x"
=GetLineSize      sioUse  1
=GetLineCount     sioUse  24

== Read line "x"
=ReadLine         sioUse  true   true  "x"
=GetLineSize      sioUse  1
=GetLineCount     sioUse  25

== Read line "   x"
=ReadLine         sioUse  false  false  "   x\x0A"
=GetLineSize      sioUse  5
=GetLineCount     sioUse  26

== Read line "   x"
=ReadLine         sioUse  true   false  "x\x0A"
=GetLineSize      sioUse  2
=GetLineCount     sioUse  27

== Read line "   x"
=ReadLine         sioUse  false  true  "   x"
=GetLineSize      sioUse  4
=GetLineCount     sioUse  28

== Read line "   x"
=ReadLine         sioUse  true   true  "x"
=GetLineSize      sioUse  1
=GetLineCount     sioUse  29

== Read line "   x   "
=ReadLine         sioUse  false  false  "   x   \x0A"
=GetLineSize      sioUse  8
=GetLineCount     sioUse  30

== Read line "   x   "
=ReadLine         sioUse  true   false  "x   \x0A"
=GetLineSize      sioUse  5
=GetLineCount     sioUse  31

== Read line "   x   "
=ReadLine         sioUse  false  true  "   x"
=GetLineSize      sioUse  4
=GetLineCount     sioUse  32

== Read line "   x   "
=ReadLine         sioUse  true   true  "x"
=GetLineSize      sioUse  1
=GetLineCount     sioUse  33

== Read line ""
=ReadLine         sioUse  true   true  ""
=GetLineSize      sioUse  0
=GetLineCount     sioUse  34

== Read line "   end\01   "     end of file"  no new line at end of file
=ReadLine         sioUse  false  false  "   end\\01   "
=GetLineSize      sioUse  12
=GetLineCount     sioUse  35

== Destroy control
=DestroySIO       sioUse

== Test write a file
=NewSIO           sioWrite
=OpenFile         sioWrite  "..\\testcase\\written.bak" ""  "Write 1" write OK

== Write the content of the file
=WriteString      sioWrite  "// Generated test file"  false
=WriteString      sioWrite  "" true
=WriteString      sioWrite  "" true
=WriteString      sioWrite  "a   "   false     // newline precedes the line to be written
=WriteString      sioWrite  "b"   true
=WriteString      sioWrite  "   c"   false
=WriteCharString  sioWrite  "   d  "  true
=WriteCharString  sioWrite  " a long string \\0 with a zero   "  false
=WriteCharString  sioWrite  "x"   true

== Destroy the file object
=DestroySIO       sioWrite

== Verify the written file
=NewSIO           sioUse
=OpenFile         sioUse  "..\\testcase\\written.bak"  "test"  "Read 1" read OK

=ReadLine         sioUse  false true "// Generated test file"  
=ReadLine         sioUse  false true "" 
=ReadLine         sioUse  false true "a"        // newline precedes the line to be written
=ReadLine         sioUse  false true "b   c"
=ReadLine         sioUse  false true "   d   a long string \\0 with a zero"
=ReadLine         sioUse  false true "x"   

=DestroySIO       sioUse

== Test compare file
=CompareFile      "tst-sio-02.test" "xxx"  "..\\testcase\\written" "bak"  0 true

== Test append line to file
=NewSIO           sioWrite
=OpenFile         sioWrite  "..\\testcase\\written" "bak" "Append" append OK
=WriteCharString  sioWrite  "xxxx"   true
=WriteCharString  sioWrite  ""   true
=DestroySIO       sioWrite

== Test compare unequal files, wrong length
=CompareFile      "..\\testcase\\tst-sio-01.test" ""  "..\\testcase\\written" "bak" 1 false

== Create wrong file
=NewSIO           sioWrite
=OpenFile         sioWrite  "..\\testcase\\written.bak" "???" "???" write OK
=WriteString      sioWrite  "a"      false
=WriteString      sioWrite  "a"      true
=WriteCharString  sioWrite  "xxxx"   false
=WriteCharString  sioWrite  ""       true
=DestroySIO       sioWrite

== Test compare unequal file, unequal lines
=CompareFile      "..\\testcase\\tst-sio-02.test" ""  "..\\testcase\\written" "bak" 2 false

== Test Copy file
=CopyFile         "..\\testcase\\tst-sio-01.test" ""  "..\\testcase\\written.bak" "" .t
=CompareFile      "tst-sio-01.test" ""  "written" "bak" 0 true

== Test copy file with blanks in name
=CopyFile      "..\\testcase\\tst-sio-01.test" ""  "..\\testcase\\ w r i t t e n .bak" "error" .t 
=CompareFile      "tst-sio-01.test" ""  " w r i t t e n " "bak" 0 true

== Test delete existing file
=DeleteFile    "..\\testcase\\ w r i t t e n " "bak" .true
=DeleteFile    "..\\testcase\\ w r i t t e n .bak" "???" .true
=Recover

== Test delete non existing file
=DeleteFile    "..\\testcase\\ w r i t t e n .bak" "???" .false

== Test copy file with incorrect name
=CopyFile      "..\\testcase\\tst-sio-01.xxx" ""  "..\\testcase\\ w r.bak" "error" .f 

== Test extension extractor
=GetFileType      "abcd.abc"        "abc"
=GetFileType      "abcd.abc.xy   "  "xy"
=GetFileType      "abcd."           "."
=GetFileType      "abcd"            ""
=GetFileType      "abcd"            "x"
=Recover
=GetFileType      "abcd.x"          ""
=Recover

== Verify leakage
=Reset
=AllocCompareNum    1

  